pipeline {
    agent any
tools 
{
maven 'M2_HOME'
}
 environment { 

        registry = "eyajdir/devops" 

        registryCredential = 'dockerHub' 

        dockerImage = '' 

    }
    
    stages {
        stage('GIT') {
            steps {
                git branch:'eya',
                url:'https://github.com/gacharsadok/DevOps'
                
                script{
                                    Date date = new Date()
String datePart = date.format("dd/MM/yyyy")
String timePart = date.format("HH:mm:ss")

println "date : " + datePart + "\ttime : " + timePart
                }

            }
        }
         stage('CLEAN')
        {
        steps {
        sh """mvn -version"""
        sh 'mvn clean'
        }
        
        }
        stage('PACkAGE')
        {
        steps {
        sh 'mvn package -Dmaven.test.skip=true'
        }
        }
        stage('Compile') {
             
             
            steps {
                sh 'mvn compile'
               
            }
        }
       
          
        stage('SONAR')
        {
        steps{
        sh 'mvn sonar:sonar -Dsonar.login=admin -Dsonar.password=admin7'
        }
        }
        stage('TEST')
        {
        steps {
        sh 'mvn test'
        }
        }
        stage('DEPLOY')
        {
        steps {
        sh 'mvn deploy -Dmaven.test.skip=true'
        }
        }

          stage('BUILD') { 

            steps { 

                script { 

                    dockerImage = docker.build registry + ":$BUILD_NUMBER" 

                }

            } 

        }

        stage('PUSH') { 

            steps { 

                script { 

                    docker.withRegistry( '', registryCredential ) { 

                        dockerImage.push() 

                    }

                } 

            }

        } 

        stage('Cleaning up') { 

            steps { 

                sh "docker rmi $registry:$BUILD_NUMBER" 

            }

        }
           stage('Docker compose ')
        {
           steps {
        sh 'docker-compose down'
        sh 'docker-compose up -d'
        }
        }
    }
     
}
       
